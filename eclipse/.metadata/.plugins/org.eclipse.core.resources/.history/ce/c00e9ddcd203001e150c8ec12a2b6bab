/*
 * Decompiled with CFR 0.150.
 * 
 * Could not load the following classes:
 *  net.labymod.api.Laby
 *  net.labymod.api.LabyAPI
 *  net.labymod.api.client.gui.window.Window
 *  net.labymod.api.client.render.draw.RectangleRenderer
 *  net.labymod.api.client.render.font.text.TextRenderer
 *  net.labymod.api.client.render.matrix.Stack
 */
package net.labymod.addons.flux.core.debugger;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Supplier;
import net.labymod.api.Laby;
import net.labymod.api.LabyAPI;
import net.labymod.api.client.gui.window.Window;
import net.labymod.api.client.render.draw.RectangleRenderer;
import net.labymod.api.client.render.font.text.TextRenderer;
import net.labymod.api.client.render.matrix.Stack;

public final class Debugger {
    private static final List<Supplier<String>> ENTRIES = new ArrayList<Supplier<String>>();
    public static boolean enabled = false;

    public static void addEntry(String value) {
        Debugger.addEntry(() -> value);
    }

    public static void addEntry(Supplier<String> supplier) {
        if (!enabled) {
            return;
        }
        ENTRIES.add(supplier);
    }

    public static void render(Stack stack) {
        LabyAPI labyAPI = Laby.labyAPI();
        TextRenderer textRenderer = labyAPI.renderPipeline().textRenderer();
        Window window = labyAPI.minecraft().minecraftWindow();
        String[] lines = new String[ENTRIES.size()];
        float maxWidth = 0.0f;
        for (int i = 0; i < ENTRIES.size(); ++i) {
            String content;
            lines[i] = content = ENTRIES.get(i).get();
            float width = textRenderer.width(content);
            if (!(width > maxWidth)) continue;
            maxWidth = width;
        }
        int scaledWidth = window.getScaledWidth();
        RectangleRenderer rectangleRenderer = labyAPI.renderPipeline().rectangleRenderer();
        float bottom = (float)lines.length * textRenderer.height();
        ((RectangleRenderer)((RectangleRenderer)rectangleRenderer.pos((float)scaledWidth - (maxWidth += 4.0f), 0.0f, (float)scaledWidth, bottom += 2.0f)).color(-2013265920)).render(stack);
        float y = 0.0f;
        for (String line : lines) {
            textRenderer.text(line).pos((float)scaledWidth - textRenderer.width(line) - 2.0f, y + 2.0f).color(-1).render(stack);
            y += textRenderer.height();
        }
        ENTRIES.clear();
    }

    public static String withLeadingZeros(int number) {
        StringBuilder string = new StringBuilder(String.valueOf(number));
        for (int i = string.length(); i < 3; ++i) {
            string.insert(0, "\u00a780\u00a7r");
        }
        return string.toString();
    }
}

