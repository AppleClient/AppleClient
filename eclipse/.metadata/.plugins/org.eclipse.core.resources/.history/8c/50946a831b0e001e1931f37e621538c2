package appu26j.gui.quickplay;

import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;

import appu26j.Apple;
import appu26j.fontrenderer.FixedFontRenderer;
import appu26j.interfaces.MinecraftInterface;
import appu26j.utils.SoundUtil;
import net.minecraft.client.gui.Gui;
import net.minecraft.client.gui.ScaledResolution;

public class CustomButton implements MinecraftInterface
{
    private final String text;
    private final float x, y;
    
    public CustomButton(String text, float x, float y)
    {
        this.text = text;
        this.x = x;
        this.y = y;
    }
    
    public void drawScreen(int mouseX, int mouseY, float partialTicks)
    {
        Gui.drawRect(this.x, this.y, this.x + 80, this.y + 20, (this.isInsideBox(mouseX, mouseY, this.x, this.y, this.x + 80, this.y + 20) ? new Color(0, 0, 0, 150) : new Color(0, 0, 0, 128)).getRGB());
        float temp = 96 / (this.text.length() == 0 ? 1 : this.text.length());
        temp = temp > 8 ? 8 : temp;
        FixedFontRenderer.drawString(this.text, (this.x + 40) - (FixedFontRenderer.getStringWidth(this.text, temp) / 2), this.y + temp / (temp / 8) - (temp / 3.5F) + 1, temp, -1);
    }
    
    public void mouseClicked(int mouseX, int mouseY, int mouseButton)
    {
        if (this.isInsideBox(mouseX, mouseY, this.x, this.y, this.x + 80, this.y + 20))
        {
            SoundUtil.playClickSound();
            
            switch (this.text)
            {
                case "BedWars":
                {
                    ArrayList<CustomButton> customButtons = new ArrayList<>();
                    ScaledResolution scaledResolution = new ScaledResolution(this.mc);
                    float f = scaledResolution.getScaledWidth() / 2;
                    float g = scaledResolution.getScaledHeight() / 2;
                    float temp = 4 * 41.75F;
                    f -= temp;
                    customButtons.add(new CustomButton("BedWars Trios", f + 170, g - 10));
                    customButtons.add(new CustomButton("BedWars Solo", f, g - 10));
                    customButtons.add(new CustomButton("BedWars Duos", f + 85, g - 10));
                    customButtons.add(new CustomButton("BedWars Quads", f + 255, g - 10));
                    Apple.CLIENT.getQuickPlayGUI().customButtons.clear();
                    Apple.CLIENT.getQuickPlayGUI().customButtons.addAll(customButtons);
                    break;
                }
                
                case "SkyWars":
                {
                    ArrayList<CustomButton> customButtons = new ArrayList<>();
                    ScaledResolution scaledResolution = new ScaledResolution(this.mc);
                    float f = scaledResolution.getScaledWidth() / 2;
                    float g = scaledResolution.getScaledHeight() / 2;
                    float temp = 4 * 41.75F;
                    f -= temp;
                    customButtons.add(new CustomButton("SkyWars Duos Normal", f + 170, g - 10));
                    customButtons.add(new CustomButton("SkyWars Solo Normal", f, g - 10));
                    customButtons.add(new CustomButton("SkyWars Solo Insane", f + 85, g - 10));
                    customButtons.add(new CustomButton("SkyWars Duos Insane", f + 255, g - 10));
                    Apple.CLIENT.getQuickPlayGUI().customButtons.clear();
                    Apple.CLIENT.getQuickPlayGUI().customButtons.addAll(customButtons);
                    break;
                }
                
                case "BedWars Solo":
                {
                    this.cmd("bedwars_eight_one");
                    break;
                }
                
                case "BedWars Duos":
                {
                    this.cmd("bedwars_eight_two");
                    break;
                }

                case "BedWars Trios":
                {
                    this.cmd("bedwars_four_three");
                    break;
                }

                case "BedWars Quads":
                {
                    this.cmd("bedwars_four_four");
                    break;
                }
                
                case "SkyWars Solo Normal":
                {
                    this.cmd("solo_normal");
                    break;
                }

                case "SkyWars Solo Insane":
                {
                    this.cmd("solo_insane");
                    break;
                }

                case "SkyWars Duos Normal":
                {
                    this.cmd("teams_normal");
                    break;
                }

                case "SkyWars Duos Insane":
                {
                    this.cmd("teams_insane");
                    break;
                }
            }
        }
    }
    
    /**
     * Fired when a key is typed (except F11 which toggles full screen). This is the equivalent of
     * KeyListener.keyTyped(KeyEvent e). Args : character (character on the key), keyCode (lwjgl Keyboard key code)
     */
    protected boolean keyTyped(char typedChar, int keyCode) throws IOException
    {
        switch (this.text)
        {
            case "BedWars":
            {
                return true;
            }
            
            case "SkyWars":
            {
                return true;
            }
            
            default:
            {
                Apple.CLIENT.getQuickPlayGUI().customButtons.clear();
                Apple.CLIENT.getQuickPlayGUI().customButtons.addAll(Apple.CLIENT.getQuickPlayGUI().originalButtons);
                return false;
            }
        }
    }
    
    public void cmd(String command)
    {
        this.mc.thePlayer.sendChatMessage("/play " + command);
        this.mc.displayGuiScreen(null);
    }
    
    public boolean isInsideBox(int mouseX, int mouseY, float x, float y, float width, float height)
    {
        return mouseX > x && mouseX < width && mouseY > y && mouseY < height;
    }
}
